"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
if (Symbol["asyncIterator"] === undefined)
    (Symbol["asyncIterator"]) = Symbol.for("asyncIterator");
const events_1 = require("events");
const terminator_1 = require("@async-generators/terminator");
const $terminated = Symbol.for("terminated");
function _Subject() {
    let _signal = new events_1.EventEmitter();
    let _buffer = [];
    let _done = false;
    let _error;
    let _disposed = false;
    function dispose() {
        _disposed = true;
        _signal.emit("disposed");
    }
    async function* iterator() {
        while (true) {
            if (_error) {
                dispose();
                throw _error;
            }
            if (_buffer.length === 0) {
                if (_done) {
                    dispose();
                    return;
                }
                ;
                await new Promise((r) => {
                    _signal.once("push", r);
                });
            }
            else {
                if ((yield _buffer.shift()) === $terminated) {
                    dispose();
                    return;
                }
                _signal.emit("pull", _buffer.length);
            }
        }
    }
    return {
        get isDisposed() { return _disposed; },
        next: function (item) {
            if (_done)
                return -1;
            _buffer.push(item);
            _signal.emit("push");
            return _buffer.length;
        },
        error: function (err) {
            if (_done)
                return;
            _error = err;
            _signal.emit("push");
        },
        done: function () {
            if (_done)
                return;
            _done = true;
            _signal.emit("push");
        },
        [Symbol.asyncIterator]: function () {
            return terminator_1.default(iterator())[Symbol.asyncIterator]();
        },
        on(event, cb) {
            if (_disposed)
                throw Error("Subject already disposed");
            _signal.on(event, cb);
        }
    };
}
function default_1() {
    return _Subject();
}
exports.default = default_1;
//# sourceMappingURL=index.js.map